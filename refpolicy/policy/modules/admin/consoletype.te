
policy_module(consoletype, 1.0)

########################################
#
# Declarations
#

type consoletype_t;
type consoletype_exec_t;
init_make_init_domain(consoletype_t,consoletype_exec_t)
init_make_system_domain(consoletype_t,consoletype_exec_t)
role system_r types consoletype_t;

########################################
#
# Local declarations
#

allow consoletype_t self:capability sys_admin;

allow consoletype_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem dyntransition };
allow consoletype_t self:fd use;
allow consoletype_t self:fifo_file rw_file_perms;
allow consoletype_t self:unix_dgram_socket create_socket_perms;
allow consoletype_t self:unix_stream_socket create_stream_socket_perms;
allow consoletype_t self:unix_dgram_socket sendto;
allow consoletype_t self:unix_stream_socket connectto;
allow consoletype_t self:shm create_shm_perms;
allow consoletype_t self:sem create_sem_perms;
allow consoletype_t self:msgq create_msgq_perms;
allow consoletype_t self:msg { send receive };

kernel_use_fd(consoletype_t)
kernel_dontaudit_read_system_state(consoletype_t)

fs_getattr_all_fs(consoletype_t)

term_use_console(consoletype_t)
term_use_unallocated_tty(consoletype_t)

init_use_file_descriptors(consoletype_t)
init_script_use_pseudoterminal(consoletype_t)
init_script_use_file_descriptors(consoletype_t)

domain_use_widely_inheritable_file_descriptors(consoletype_t)

files_ignore_read_rootfs_file(consoletype_t)

libraries_use_dynamic_loader(consoletype_t)
libraries_use_shared_libraries(consoletype_t)

ifdef(`distro_redhat', `
	fs_use_tmpfs_character_devices(consoletype_t)
')

optional_policy(`authlogin.te', `
	authlogin_pam_read_runtime_data(consoletype_t)
')

optional_policy(`userdomain.te',`
	userdomain_use_all_unprivileged_users_file_descriptors(consoletype_t)
')

ifdef(`TODO',`

allow consoletype_t sysadm_t:fd use;
allow consoletype_t { sysadm_tty_device_t sysadm_devpts_t }:chr_file rw_file_perms;
allow consoletype_t sysadm_t:fifo_file rw_file_perms;

allow consoletype_t nfs_t:file write;

allow consoletype_t crond_t:fifo_file r_file_perms;
allow consoletype_t system_crond_t:fd use;

optional_policy(`ypbind.te', `
if (allow_ypbind) {
can_network(consoletype_t)
r_dir_file(consoletype_t,var_yp_t)
corenet_tcp_bind_generic_port(consoletype_t)
corenet_udp_bind_generic_port(consoletype_t)
corenet_tcp_bind_reserved_port(consoletype_t)
corenet_udp_bind_reserved_port(consoletype_t)
corenet_dontaudit_tcp_bind_all_reserved_ports(consoletype_t)
corenet_dontaudit_udp_bind_all_reserved_ports(consoletype_t)
dontaudit consoletype_t self:capability net_bind_service;
} else {
dontaudit consoletype_t var_yp_t:dir search;
}
') dnl end ypbind optional_policy

optional_policy(`automount.te', `
allow consoletype_t autofs_t:dir { search getattr };
')

optional_policy(`xdm.te', `
domain_auto_trans(xdm_t, consoletype_exec_t, consoletype_t)
allow consoletype_t xdm_tmp_t:file rw_file_perms;
')

optional_policy(`lpd.te', `
allow consoletype_t printconf_t:file r_file_perms;
')

optional_policy(`firstboot.te', `
allow consoletype_t firstboot_t:fifo_file write;
')
') dnl end TODO
