## <module name="corenetwork" layer="kernel">
## <summary>Policy controlling access to network objects</summary>

########################################
## <interface name="corenet_tcp_sendrecv_generic_if">
##	<description>
##		Send and receive TCP network traffic on the general interfaces.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
##	<infoflow type="both" weight="10"/>
## </interface>
#
define(`corenet_tcp_sendrecv_generic_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_t:netif { tcp_send tcp_recv };
')

define(`corenet_tcp_sendrecv_generic_if_depend',`
	type netif_t;

	class netif { tcp_send tcp_recv };
')

#######################################
#
# corenet_udp_send_generic_if(domain)
#
define(`corenet_udp_send_generic_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_t:netif udp_send;
')

define(`corenet_udp_send_generic_if_depend',`
	type netif_t;

	class netif udp_send;
')

#######################################
#
# corenet_udp_receive_generic_if(domain)
#
define(`corenet_udp_receive_generic_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_t:netif udp_recv;
')

define(`corenet_udp_receive_generic_if_depend',`
	type netif_t;

	class netif udp_recv;
')

#######################################
#
# corenet_udp_sendrecv_generic_if(domain)
#
define(`corenet_udp_sendrecv_generic_if',`
	corenet_udp_send_generic_if($1)
	corenet_udp_receive_generic_if($1)
')

#######################################
#
# corenet_raw_send_generic_if(domain)
#
define(`corenet_raw_send_generic_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_t:netif rawip_send;
	allow $1 self:capability net_raw;
')

define(`corenet_raw_send_generic_if_depend',`
	type netif_t;

	class netif rawip_send;
	class capability net_raw;
')

#######################################
#
# corenet_raw_receive_generic_if(domain)
#
define(`corenet_raw_receive_generic_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_t:netif rawip_recv;
')

define(`corenet_raw_receive_generic_if_depend',`
	type netif_t;

	class netif rawip_recv;
')

#######################################
#
# corenet_raw_sendrecv_generic_if(domain)
#
define(`corenet_raw_sendrecv_generic_if',`
	corenet_raw_send_generic_if($1)
	corenet_raw_receive_generic_if($1)
')

#######################################
#
# corenet_tcp_sendrecv_all_if(domain)
#
define(`corenet_tcp_sendrecv_all_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_type:netif { tcp_send tcp_recv };
')

define(`corenet_tcp_sendrecv_all_if_depend',`
	attribute netif_type;

	class netif { tcp_send tcp_recv };
')

#######################################
#
# corenet_udp_send_all_if(domain)
#
define(`corenet_udp_send_all_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_type:netif udp_send;
')

define(`corenet_udp_send_all_if_depend',`
	attribute netif_type;

	class netif udp_send;
')

#######################################
#
# corenet_udp_receive_all_if(domain)
#
define(`corenet_udp_receive_all_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_type:netif udp_recv;
')

define(`corenet_udp_receive_all_if_depend',`
	attribute netif_type;

	class netif udp_recv;
')

#######################################
#
# corenet_udp_sendrecv_all_if(domain)
#
define(`corenet_udp_sendrecv_all_if',`
	corenet_udp_send_all_if($1)
	corenet_udp_receive_all_if($1)
')

#######################################
#
# corenet_raw_send_all_if(domain)
#
define(`corenet_raw_send_all_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_type:netif rawip_send;
	allow $1 self:capability net_raw;
')

define(`corenet_raw_send_all_if_depend',`
	attribute netif_type;

	class netif rawip_send;
	class capability net_raw;
')

#######################################
#
# corenet_raw_receive_all_if(domain)
#
define(`corenet_raw_receive_all_if',`
	requires_block_template(`$0'_depend)

	allow $1 netif_type:netif rawip_recv;
')

define(`corenet_raw_receive_all_if_depend',`
	attribute netif_type;

	class netif rawip_recv;
')

#######################################
#
# corenet_raw_sendrecv_all_if(domain)
#
define(`corenet_raw_sendrecv_all_if',`
	corenet_raw_send_all_if($1)
	corenet_raw_receive_all_if($1)
')

#######################################
#
# corenet_tcp_sendrecv_generic_node(domain)
#
define(`corenet_tcp_sendrecv_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:node { tcp_send tcp_recv };
')

define(`corenet_tcp_sendrecv_generic_node_depend',`
	type node_t;

	class node { tcp_send tcp_recv };
')

#######################################
#
# corenet_udp_send_generic_node(domain)
#
define(`corenet_udp_send_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:node udp_send;
')

define(`corenet_udp_send_generic_node_depend',`
	type node_t;

	class node udp_send;
')

#######################################
#
# corenet_udp_receive_generic_node(domain)
#
define(`corenet_udp_receive_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:node udp_recv;
')

define(`corenet_udp_receive_generic_node_depend',`
	type node_t;

	class node udp_recv;
')

#######################################
#
# corenet_udp_sendrecv_generic_node(domain)
#
define(`corenet_udp_sendrecv_generic_node',`
	corenet_udp_send_generic_node($1)
	corenet_udp_receive_generic_node($1)
')

#######################################
#
# corenet_raw_send_generic_node(domain)
#
define(`corenet_raw_send_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:node rawip_send;
	allow $1 self:capability net_raw;
')

define(`corenet_raw_send_generic_node_depend',`
	type node_t;

	class node rawip_send;
	class capability net_raw;
')

#######################################
#
# corenet_raw_receive_generic_node(domain)
#
define(`corenet_raw_receive_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:node rawip_recv;
')

define(`corenet_raw_receive_generic_node_depend',`
	type node_t;

	class node rawip_recv;
')

#######################################
#
# corenet_raw_sendrecv_generic_node(domain)
#
define(`corenet_raw_sendrecv_generic_node',`
	corenet_raw_send_generic_node($1)
	corenet_raw_receive_generic_node($1)
')

#######################################
#
# corenet_tcp_bind_generic_node(domain)
#
define(`corenet_tcp_bind_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:tcp_socket node_bind;
')

define(`corenet_tcp_bind_generic_node_depend',`
	type node_t;

	class tcp_socket node_bind;
')

#######################################
#
# corenet_udp_bind_generic_node(domain)
#
define(`corenet_udp_bind_generic_node',`
	requires_block_template(`$0'_depend)

	allow $1 node_t:udp_socket node_bind;
')

define(`corenet_udp_bind_generic_node_depend',`
	type node_t;

	class udp_socket node_bind;
')

#######################################
#
# corenet_tcp_sendrecv_all_nodes(domain)
#
define(`corenet_tcp_sendrecv_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:node { tcp_send tcp_recv };
')

define(`corenet_tcp_sendrecv_all_nodes_depend',`
	attribute node_type;

	class node { tcp_send tcp_recv };
')

#######################################
#
# corenet_udp_send_all_nodes(domain)
#
define(`corenet_udp_send_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:node udp_send;
')

define(`corenet_udp_send_all_nodes_depend',`
	attribute node_type;

	class node udp_send;
')

#######################################
#
# corenet_udp_receive_all_nodes(domain)
#
define(`corenet_udp_receive_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:node udp_recv;
')

define(`corenet_udp_receive_all_nodes_depend',`
	attribute node_type;

	class node udp_recv;
')

#######################################
#
# corenet_udp_sendrecv_all_nodes(domain)
#
define(`corenet_udp_sendrecv_all_nodes',`
	corenet_udp_send_all_nodes($1)
	corenet_udp_receive_all_nodes($1)
')

#######################################
#
# corenet_raw_send_all_nodes(domain)
#
define(`corenet_raw_send_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:node rawip_send;
	allow $1 self:capability net_raw;
')

define(`corenet_raw_send_all_nodes_depend',`
	attribute node_type;

	class node rawip_send;
	class capability net_raw;
')

#######################################
#
# corenet_raw_receive_all_nodes(domain)
#
define(`corenet_raw_receive_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:node rawip_recv;
')

define(`corenet_raw_receive_all_nodes_depend',`
	attribute node_type;

	class node rawip_recv;
')

#######################################
#
# corenet_raw_sendrecv_all_nodes(domain)
#
define(`corenet_raw_sendrecv_all_nodes',`
	corenet_raw_send_all_nodes($1)
	corenet_raw_receive_all_nodes($1)
')

#######################################
#
# corenet_tcp_bind_all_nodes(domain)
#
define(`corenet_tcp_bind_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:tcp_socket node_bind;
')

define(`corenet_tcp_bind_all_nodes_depend',`
	attribute node_type;

	class tcp_socket node_bind;
')

#######################################
#
# corenet_udp_bind_all_nodes(domain)
#
define(`corenet_udp_bind_all_nodes',`
	requires_block_template(`$0'_depend)

	allow $1 node_type:udp_socket node_bind;
')

define(`corenet_udp_bind_all_nodes_depend',`
	attribute node_type;

	class udp_socket node_bind;
')

#######################################
#
# corenet_tcp_sendrecv_generic_port(domain)
#
define(`corenet_tcp_sendrecv_generic_port',`
	requires_block_template(`$0'_depend)

	allow $1 port_t:tcp_socket { send_msg recv_msg };
')

define(`corenet_tcp_sendrecv_generic_port_depend',`
	type port_t;

	class tcp_socket { send_msg recv_msg };
')

#######################################
#
# corenet_udp_send_generic_port(domain)
#
define(`corenet_udp_send_generic_port',`
	requires_block_template(`$0'_depend)

	allow $1 port_t:udp_socket send_msg;
')

define(`corenet_udp_send_generic_port_depend',`
	type port_t;

	class udp_socket send_msg;
')

#######################################
#
# corenet_udp_receive_generic_port(domain)
#
define(`corenet_udp_receive_generic_port',`
	requires_block_template(`$0'_depend)

	allow $1 port_t:udp_socket recv_msg;
')

define(`corenet_udp_receive_generic_port_depend',`
	type port_t;

	class udp_socket recv_msg;
')

#######################################
#
# corenet_udp_sendrecv_generic_port(domain)
#
define(`corenet_udp_sendrecv_generic_port',`
	corenet_udp_send_generic_port($1)
	corenet_udp_receive_generic_port($1)
')

#######################################
#
# corenet_tcp_bind_generic_port(domain)
#
define(`corenet_tcp_bind_generic_port',`
	requires_block_template(`$0'_depend)

	allow $1 port_t:tcp_socket name_bind;
')

define(`corenet_tcp_bind_generic_port_depend',`
	type port_t;

	class tcp_socket name_bind;
')

#######################################
#
# corenet_udp_bind_generic_port(domain)
#
define(`corenet_udp_bind_generic_port',`
	requires_block_template(`$0'_depend)

	allow $1 port_t:udp_socket name_bind;
')

define(`corenet_udp_bind_generic_port_depend',`
	type port_t;

	class udp_socket name_bind;
')

#######################################
#
# corenet_tcp_sendrecv_all_ports(domain)
#
define(`corenet_tcp_sendrecv_all_ports',`
	requires_block_template(`$0'_depend)

	allow $1 port_type:tcp_socket { send_msg recv_msg };
')

define(`corenet_tcp_sendrecv_all_ports_depend',`
	attribute port_type;

	class tcp_socket { send_msg recv_msg };
')

#######################################
#
# corenet_udp_send_all_ports(domain)
#
define(`corenet_udp_send_all_ports',`
	requires_block_template(`$0'_depend)

	allow $1 port_type:udp_socket send_msg;
')

define(`corenet_udp_send_all_ports_depend',`
	attribute port_type;

	class udp_socket send_msg;
')

#######################################
#
# corenet_udp_receive_all_ports(domain)
#
define(`corenet_udp_receive_all_ports',`
	requires_block_template(`$0'_depend)

	allow $1 port_type:udp_socket recv_msg;
')

define(`corenet_udp_receive_all_ports_depend',`
	attribute port_type;

	class udp_socket recv_msg;
')

#######################################
#
# corenet_udp_sendrecv_all_ports(domain)
#
define(`corenet_udp_sendrecv_all_ports',`
	corenet_udp_send_all_ports($1)
	corenet_udp_receive_all_ports($1)
')

#######################################
#
# corenet_tcp_bind_all_ports(domain)
#
define(`corenet_tcp_bind_all_ports',`
	requires_block_template(`$0'_depend)

	allow $1 port_type:tcp_socket name_bind;
')

define(`corenet_tcp_bind_all_ports_depend',`
	attribute port_type;

	class tcp_socket name_bind;
')

#######################################
#
# corenet_udp_bind_all_ports(domain)
#
define(`corenet_udp_bind_all_ports',`
	requires_block_template(`$0'_depend)

	allow $1 port_type:udp_socket name_bind;
')

define(`corenet_udp_bind_all_ports_depend',`
	attribute port_type;

	class udp_socket name_bind;
')

#######################################
#
# corenet_tcp_sendrecv_reserved_port(domain)
#
define(`corenet_tcp_sendrecv_reserved_port',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_t:tcp_socket { send_msg recv_msg };
')

define(`corenet_tcp_sendrecv_reserved_port_depend',`
	type reserved_port_t;

	class tcp_socket { send_msg recv_msg };
')

#######################################
#
# corenet_udp_send_reserved_port(domain)
#
define(`corenet_udp_send_reserved_port',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_t:udp_socket send_msg;
')

define(`corenet_udp_send_reserved_port_depend',`
	type reserved_port_t;

	class udp_socket send_msg;
')

#######################################
#
# corenet_udp_receive_reserved_port(domain)
#
define(`corenet_udp_receive_reserved_port',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_t:udp_socket recv_msg;
')

define(`corenet_udp_receive_reserved_port_depend',`
	type reserved_port_t;

	class udp_socket recv_msg;
')

#######################################
#
# corenet_udp_sendrecv_reserved_port(domain)
#
define(`corenet_udp_sendrecv_reserved_port',`
	corenet_udp_send_reserved_port($1)
	corenet_udp_receive_reserved_port($1)
')

#######################################
#
# corenet_tcp_bind_reserved_port(domain)
#
define(`corenet_tcp_bind_reserved_port',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_t:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

define(`corenet_tcp_bind_reserved_port_depend',`
	type reserved_port_t;

	class tcp_socket name_bind;
	class capability net_bind_service;
')

#######################################
#
# corenet_udp_bind_reserved_port(domain)
#
define(`corenet_udp_bind_reserved_port',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_t:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

define(`corenet_udp_bind_reserved_port_depend',`
	type reserved_port_t;

	class udp_socket name_bind;
	class capability net_bind_service;
')

#######################################
#
# corenet_tcp_sendrecv_all_reserved_ports(domain)
#
define(`corenet_tcp_sendrecv_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_type:tcp_socket { send_msg recv_msg };
')

define(`corenet_tcp_sendrecv_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class tcp_socket { send_msg recv_msg };
')

#######################################
#
# corenet_udp_send_all_reserved_ports(domain)
#
define(`corenet_udp_send_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_type:udp_socket send_msg;
')

define(`corenet_udp_send_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class udp_socket send_msg;
')

#######################################
#
# corenet_udp_receive_all_reserved_ports(domain)
#
define(`corenet_udp_receive_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_type:udp_socket recv_msg;
')

define(`corenet_udp_receive_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class udp_socket recv_msg;
')

#######################################
#
# corenet_udp_sendrecv_all_reserved_ports(domain)
#
define(`corenet_udp_sendrecv_all_reserved_ports',`
	corenet_udp_send_all_reserved_ports($1)
	corenet_udp_receive_all_reserved_ports($1)
')

#######################################
#
# corenet_tcp_bind_all_reserved_ports(domain)
#
define(`corenet_tcp_bind_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_type:tcp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

define(`corenet_tcp_bind_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class tcp_socket name_bind;
	class capability net_bind_service;
')

#######################################
#
# corenet_dontaudit_tcp_bind_all_reserved_ports(domain)
#
define(`corenet_dontaudit_tcp_bind_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	dontaudit $1 reserved_port_type:tcp_socket name_bind;
')

define(`corenet_dontaudit_tcp_bind_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class tcp_socket name_bind;
')

#######################################
#
# corenet_udp_bind_all_reserved_ports(domain)
#
define(`corenet_udp_bind_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	allow $1 reserved_port_type:udp_socket name_bind;
	allow $1 self:capability net_bind_service;
')

define(`corenet_udp_bind_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class udp_socket name_bind;
	class self:capability net_bind_service;
')

#######################################
#
# corenet_dontaudit_udp_bind_all_reserved_ports(domain)
#
define(`corenet_dontaudit_udp_bind_all_reserved_ports',`
	requires_block_template(`$0'_depend)

	dontaudit $1 reserved_port_type:udp_socket name_bind;
')

define(`corenet_dontaudit_udp_bind_all_reserved_ports_depend',`
	attribute reserved_port_type;

	class udp_socket name_bind;
')
