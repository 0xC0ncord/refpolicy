
policy_module(sysnetwork,1.0)

########################################
#
# Declarations
#

# this is shared between dhcpc and dhcpd:
type dhcp_etc_t; #, usercanread; 
typealias dhcp_etc_t alias { etc_dhcp_t etc_dhcpc_t etc_dhcpd_t };
files_file_type(dhcp_etc_t)

# this is shared between dhcpc and dhcpd:
type dhcp_state_t;
files_file_type(dhcp_state_t)

type dhcpc_t;
type dhcpc_exec_t;
init_daemon_domain(dhcpc_t,dhcpc_exec_t)
role system_r types dhcpc_t;

type dhcpc_state_t;
files_file_type(dhcpc_state_t)

type dhcpc_tmp_t;
files_tmp_file(dhcpc_tmp_t)

type dhcpc_var_run_t;
files_pid_file(dhcpc_var_run_t)

type ifconfig_t;
type ifconfig_exec_t;
init_system_domain(ifconfig_t, ifconfig_exec_t)
role system_r types ifconfig_t;

type net_conf_t alias resolv_conf_t;
files_file_type(net_conf_t)

########################################
#
# DHCP client local policy
#
allow dhcpc_t self:capability { dac_override fsetid net_admin net_raw net_bind_service sys_resource sys_tty_config };
dontaudit dhcpc_t self:capability sys_tty_config;
# for access("/etc/bashrc", X_OK) on Red Hat
dontaudit dhcpc_t self:capability { dac_read_search sys_module };

allow dhcpc_t self:tcp_socket create_socket_perms;
allow dhcpc_t self:udp_socket create_socket_perms;
allow dhcpc_t self:packet_socket create_socket_perms;
allow dhcpc_t self:netlink_route_socket { create_socket_perms nlmsg_read };
allow dhcpc_t self:fifo_file rw_file_perms;

allow dhcpc_t dhcp_etc_t:dir r_dir_perms;
allow dhcpc_t dhcp_etc_t:lnk_file r_file_perms;
allow dhcpc_t dhcp_etc_t:file { r_file_perms execute execute_no_trans };

allow dhcpc_t dhcpc_state_t:dir rw_dir_perms;
allow dhcpc_t dhcpc_state_t:file create_file_perms;
type_transition dhcpc_t dhcp_state_t:file dhcpc_state_t;

# create pid file
allow dhcpc_t dhcpc_var_run_t:file create_file_perms;
files_create_pid(dhcpc_t,dhcpc_var_run_t)

# Allow read/write to /etc/resolv.conf and /etc/ntp.conf. Note that any files
# in /etc created by dhcpcd will be labelled net_conf_t.
allow dhcpc_t net_conf_t:file create_file_perms;
files_create_etc_config(dhcpc_t,net_conf_t,file)

# create temp files
allow dhcpc_t dhcpc_tmp_t:dir create_dir_perms;
allow dhcpc_t dhcpc_tmp_t:file create_file_perms;
files_create_tmp_files(dhcpc_t, dhcpc_tmp_t, { file dir })

can_exec(dhcpc_t, dhcpc_exec_t)

# transition to ifconfig
domain_auto_trans(dhcpc_t, ifconfig_exec_t, ifconfig_t)
allow dhcpc_t ifconfig_t:fd use;
allow ifconfig_t dhcpc_t:fd use;
allow ifconfig_t dhcpc_t:fifo_file rw_file_perms;
allow ifconfig_t dhcpc_t:process sigchld;

kernel_read_system_state(dhcpc_t)
kernel_read_network_state(dhcpc_t)
kernel_read_kernel_sysctl(dhcpc_t)
dev_read_sysfs(dhcpc_t)
kernel_use_fd(dhcpc_t)

corenet_tcp_sendrecv_all_if(dhcpc_t)
corenet_raw_sendrecv_all_if(dhcpc_t)
corenet_udp_sendrecv_all_if(dhcpc_t)
corenet_tcp_sendrecv_all_nodes(dhcpc_t)
corenet_raw_sendrecv_all_nodes(dhcpc_t)
corenet_udp_sendrecv_all_nodes(dhcpc_t)
corenet_tcp_sendrecv_all_ports(dhcpc_t)
corenet_udp_sendrecv_all_ports(dhcpc_t)
corenet_tcp_bind_all_nodes(dhcpc_t)
corenet_udp_bind_all_nodes(dhcpc_t)
corenet_udp_bind_dhcpc_port(dhcpc_t)

# for SSP
dev_read_urand(dhcpc_t)

fs_getattr_all_fs(dhcpc_t)

term_dontaudit_use_console(dhcpc_t)
term_dontaudit_use_all_user_ttys(dhcpc_t)
term_dontaudit_use_all_user_ptys(dhcpc_t)
term_dontaudit_use_unallocated_tty(dhcpc_t)

corecmd_exec_bin(dhcpc_t)
corecmd_exec_sbin(dhcpc_t)
corecmd_exec_shell(dhcpc_t)

domain_use_wide_inherit_fd(dhcpc_t)

files_read_generic_etc_files(dhcpc_t)
files_read_etc_runtime_files(dhcpc_t)

init_use_fd(dhcpc_t)
init_use_script_pty(dhcpc_t)
init_rw_script_pid(dhcpc_t)

logging_send_syslog_msg(dhcpc_t)

libs_use_ld_so(dhcpc_t)
libs_use_shared_libs(dhcpc_t)

miscfiles_read_localization(dhcpc_t)

modutils_domtrans_insmod(dhcpc_t)

ifdef(`distro_redhat', `
	files_exec_generic_etc_files(dhcpc_t)
')

ifdef(`targeted_policy', `
	term_dontaudit_use_unallocated_tty(dhcpc_t)
	term_dontaudit_use_generic_pty(dhcpc_t)

	files_dontaudit_read_root_file(dhcpc_t)
')

optional_policy(`consoletype.te',`
	consoletype_domtrans(dhcpc_t)
')

optional_policy(`hostname.te',`
	hostname_domtrans(dhcpc_t)
')

optional_policy(`nscd.te',`
	nscd_domtrans(dhcpc_t)
')

optional_policy(`selinux.te',`
	seutil_newrole_sigchld(dhcpc_t)
')

optional_policy(`udev.te',`
	udev_read_db(dhcpc_t)
')

optional_policy(`userdomain.te',`
	userdom_use_all_user_fd(dhcpc_t)
')

#
# dhclient sometimes starts ypbind and ntpd
#
init_exec_script(dhcpc_t)
optional_policy(`ypbind.te',`
	ypbind_domtrans(dhcpc_t)
')
optional_policy(`ntpd.te',`
	ntpd_domtrans(dhcpc_t)
')

ifdef(`TODO',`
allow dhcpc_t autofs_t:dir { search getattr };
dontaudit dhcpc_t sysadm_home_dir_t:dir search;

optional_policy(`rhgb.te', `
allow dhcpc_t rhgb_t:process sigchld;
allow dhcpc_t rhgb_t:fd use;
allow dhcpc_t rhgb_t:fifo_file { read write };
')

can_ypbind(dhcpc_t)

ifdef(`cardmgr.te', `
domain_auto_trans(cardmgr_t, dhcpc_exec_t, dhcpc_t)
allow cardmgr_t dhcpc_var_run_t:file { getattr read };
allow cardmgr_t dhcpc_t:process signal_perms;
')
ifdef(`hotplug.te', `
domain_auto_trans(hotplug_t, dhcpc_exec_t, dhcpc_t)
allow hotplug_t dhcpc_t:process signal_perms;
allow hotplug_t dhcpc_var_run_t:file { getattr read };
allow hotplug_t dhcp_etc_t:file rw_file_perms;
allow dhcpc_t hotplug_etc_t:dir { getattr search };
ifdef(`distro_redhat', `
logging_syslogd_transition(dhcpc_t)
')
')dnl end hotplug.te

# for the dhcp client to run ping to check IP addresses
ifdef(`ping.te', `
domain_auto_trans(dhcpc_t, ping_exec_t, ping_t)
ifdef(`hotplug.te',`
allow ping_t hotplug_t:fd use;
') dnl end if hotplug
ifdef(`cardmgr.te', `
allow ping_t cardmgr_t:fd use;
') dnl end if cardmgr
') dnl end if ping

ifdef(`distro_redhat', `
allow initrc_t dhcp_etc_t:file rw_file_perms;
')

allow dhcpc_t var_lib_t:dir search;

allow dhcpc_t home_root_t:dir search;
allow initrc_t dhcpc_state_t:file { getattr read };
dontaudit dhcpc_t var_lock_t:dir search;
dontaudit dhcpc_t selinux_config_t:dir search;
dontaudit dhcpc_t domain:dir getattr;
') dnl endif TODO

########################################
#
# Ifconfig local policy
#

allow ifconfig_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem dyntransition };
allow ifconfig_t self:capability net_admin;
dontaudit ifconfig_t self:capability sys_module;

allow ifconfig_t self:fd use;
allow ifconfig_t self:fifo_file rw_file_perms;
allow ifconfig_t self:unix_dgram_socket create_socket_perms;
allow ifconfig_t self:unix_stream_socket create_stream_socket_perms;
allow ifconfig_t self:unix_dgram_socket sendto;
allow ifconfig_t self:unix_stream_socket connectto;
allow ifconfig_t self:shm create_shm_perms;
allow ifconfig_t self:sem create_sem_perms;
allow ifconfig_t self:msgq create_msgq_perms;
allow ifconfig_t self:msg { send receive };

# Create UDP sockets, necessary when called from dhcpc
allow ifconfig_t self:udp_socket create_socket_perms;

# for /sbin/ip
allow ifconfig_t self:netlink_route_socket create_netlink_socket_perms;
allow ifconfig_t self:tcp_socket { create ioctl };
files_read_generic_etc_files(ifconfig_t);

kernel_use_fd(ifconfig_t)
kernel_read_system_state(ifconfig_t)
kernel_read_network_state(ifconfig_t)
kernel_dontaudit_search_sysctl_dir(ifconfig_t)
kernel_dontaudit_search_network_sysctl_dir(ifconfig_t)

fs_getattr_xattr_fs(ifconfig_t)

term_dontaudit_use_all_user_ttys(ifconfig_t)
term_dontaudit_use_all_user_ptys(ifconfig_t)

domain_use_wide_inherit_fd(ifconfig_t)

files_dontaudit_read_root_file(ifconfig_t)

init_use_fd(ifconfig_t)
init_use_script_pty(ifconfig_t)

libs_use_ld_so(ifconfig_t)
libs_use_shared_libs(ifconfig_t)
libs_read_lib(ifconfig_t)

logging_send_syslog_msg(ifconfig_t)

miscfiles_read_localization(ifconfig_t)

seutil_use_runinit_fd(ifconfig_t)

userdom_use_all_user_fd(ifconfig_t)

ifdef(`TODO',`

can_ypbind(ifconfig_t)
ifdef(`automount.te', `
allow ifconfig_t autofs_t:dir { search getattr };
')

# Access terminals.
ifdef(`gnome-pty-helper.te', `allow ifconfig_t sysadm_gph_t:fd use;')

allow ifconfig_t tun_tap_device_t:chr_file { read write };

optional_policy(`rhgb.te', `
allow ifconfig_t rhgb_t:process sigchld;
allow ifconfig_t rhgb_t:fd use;
allow ifconfig_t rhgb_t:fifo_file { read write };
')

') dnl endif TODO
