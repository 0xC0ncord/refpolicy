# Copyright (C) 2005 Tresys Technology, LLC

########################################
#
# domain_make_base_domain(domain,[`optional'])
#
define(`domain_make_base_domain',`
requires_block_template(domain_make_base_domain_depend,$2)

# mark as a domain
typeattribute $1 domain;

# allow the domain to read its /proc/pid entries
allow $1 self:dir { getattr search read };
allow $1 self:{ file lnk_file } { getattr read };

# allow $1 to create child processes in this domain
allow $1 self:process { fork sigchld };
')

define(`domain_make_base_domain_depend',`
attribute domain;
class dir { getattr search read };
class file { getattr read };
class lnk_file { getattr read };
')

########################################
#
# domain_make_domain(domain,[`optional'])
#
define(`domain_make_domain',`
requires_block_template(domain_make_domain_depend,$2)

domain_make_base_domain($1,optional)

files_read_root_dir($1,optional)
init_sigchld($1,optional)
')

define(`domain_make_domain_depend',`
domain_make_base_domain_depend
files_read_root_dir_depend
init_send_sigchld_depend
')

########################################
#
# domain_make_entrypoint_file(domain,entrypointfile,[`optional'])
#
define(`domain_make_entrypoint_file',`
requires_block_template(domain_make_entrypoint_file_depend,$3)
allow $1 $2:file entrypoint;
files_make_file($2,$3)
typeattribute $1 entry_type;
')

define(`domain_make_entrypoint_file_depend',`
attribute entry_type;
class file entrypoint;
')

########################################
#
# domain_make_init_domain(domain,entrypointfile,[`optional'])
#
define(`domain_make_init_domain',`
requires_block_template(domain_make_init_domain_depend,$3)
domain_make_domain($1,optional)
domain_make_entrypoint_file($1,$2,optional)
typeattribute $1 init_domain;
typeattribute $2 init_domain_entry;
role system_r types $1;
')

define(`domain_make_init_domain_depend',`
attribute init_domain, init_domain_entry;
role system_r;
domain_make_domain_depend
domain_make_entrypoint_file_depend
')

########################################
#
# domain_make_daemon_domain(domain,entrypointfile,[`optional'])
#
define(`domain_make_daemon_domain',`
requires_block_template(domain_make_daemon_domain_depend,$3)
domain_make_domain($1,optional)
domain_make_entrypoint_file($1,$2,optional)
typeattribute $1 daemon_domain;
typeattribute $2 daemon_domain_entry;
role system_r types $1;
')

define(`domain_make_daemon_domain_depend',`
attribute init_domain, init_domain_entry;
role system_r;
domain_make_domain_depend
domain_make_entrypoint_file_depend
')

########################################
#
# domain_make_file_descriptors_widely_inheritable(domain,[`optional'])
#
define(`domain_make_file_descriptors_widely_inheritable',`
requires_block_template(domain_make_file_descriptors_widely_inheritable_depend,$2)
typeattribute $1 privfd;
')

define(`domain_make_file_descriptors_widely_inheritable_depend',`
attribute privfd;
')

########################################
#
# domain_use_widely_inheritable_file_descriptors(domain,[`optional'])
#
define(`domain_use_widely_inheritable_file_descriptors',`
requires_block_template(domain_use_widely_inheritable_file_descriptors_depend,$2)
allow $1 privfd:fd use;
')

define(`domain_use_widely_inheritable_file_descriptors_depend',`
attribute privfd;
class fd use;
')

########################################
#
# domain_ignore_use_widely_inheritable_file_descriptors(domain,[`optional'])
#
define(`domain_ignore_use_widely_inheritable_file_descriptors',`
requires_block_template(domain_ignore_use_widely_inheritable_file_descriptors_depend,$2)
dontaudit $1 privfd:fd use;
')

define(`domain_ignore_use_widely_inheritable_file_descriptors_depend',`
attribute privfd;
class fd use;
')

########################################
#
# domain_all_init_domains_transition(domain,[`optional'])
#
define(`domain_all_init_domains_transition',`
requires_block_template(domain_all_init_domains_transition_depend,$3)
allow $1 init_domain:process transition;
allow $1 init_domain_entry:file { getattr read execute };
dontaudit $1 daemon_domain:process { noatsecure siginh rlimitinh };
')

define(`domain_all_init_domains_transition_depend',`
attribute init_domain, init_domain_entry;
class process { transition noatsecure siginh rlimitinh };
class file { getattr read execute };
')

########################################
#
# domain_all_daemon_domains_transition(domain,[`optional'])
#
define(`domain_all_daemon_domains_transition',`
requires_block_template(domain_all_daemon_domains_transition_depend,$3)
allow $1 daemon_domain:process transition;
allow $1 daemon_domain_entry:file { getattr read execute };
allow init_domain $1:fd use;
allow $1 daemon_domain:process { noatsecure siginh rlimitinh };
')

define(`domain_all_daemon_domains_transition_depend',`
attribute daemon_domain, daemon_domain_entry;
class process { transition noatsecure siginh rlimitinh };
class file { getattr read execute };
')

########################################
#
# domain_signal_all_domains(domain,[`optional'])
#
define(`domain_signal_all_domains',`
requires_block_template(domain_signal_all_domains_depend,$2)
allow $1 domain:process signal;
')

define(`domain_signal_all_domains_depend',`
attribute domain;
class process signal;
')

########################################
#
# domain_kill_all_domains(domain,[`optional'])
#
define(`domain_kill_all_domains',`
requires_block_template(domain_kill_all_domains_depend,$2)
allow $1 domain:process sigkill;
allow $1 self:capability kill;
')

define(`domain_kill_all_domains_depend',`
attribute domain;
class process sigkill;
class capability kill;
')

########################################
#
# domain_read_all_domains_process_state(domain,[`optional'])
#
define(`domain_read_all_domains_process_state',`
requires_block_template(domain_read_all_domains_process_state_depend,$2)
allow $1 domain:dir { getattr search read };
allow $1 domain:lnk_file { getattr read };
allow $1 domain:file { getattr read };
allow $1 domain:process { getattr getsession };
')

define(`domain_read_all_domains_process_state_depend',`
attribute domain;
class dir { getattr search read };
class lnk_file { getattr read };
class file { getattr read };
class process { getattr getsession };
')

########################################
#
# domain_execute_all_entrypoint_programs(domain,[`optional'])
#
define(`domain_execute_all_entrypoint_programs',`
requires_block_template(domain_execute_all_entrypoint_programs_depend,$2)
allow $1 entry_type:file { getattr read execute execute_no_trans };
')

define(`domain_execute_all_entrypoint_programs_depend',`
attribute entry_type;
class file { getattr read execute execute_no_trans };
')
