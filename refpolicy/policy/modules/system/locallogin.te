
policy_module(locallogin,1.0)

########################################
#
# Declarations
#

type local_login_t; #, nscd_client_domain;
auth_login_entry_type(local_login_t)
domain_type(local_login_t)
domain_obj_id_change_exempt(local_login_t)
domain_subj_id_change_exempt(local_login_t)
domain_role_change_exempt(local_login_t)
domain_wide_inherit_fd(local_login_t)
role system_r types local_login_t;

type local_login_tmp_t;
files_file_type(local_login_tmp_t)

type sulogin_t;
type sulogin_exec_t;
domain_obj_id_change_exempt(sulogin_t)
domain_subj_id_change_exempt(sulogin_t)
domain_role_change_exempt(sulogin_t)
domain_wide_inherit_fd(sulogin_t)
init_domain(sulogin_t,sulogin_exec_t)
init_system_domain(sulogin_t,sulogin_exec_t)
role system_r types sulogin_t;

########################################
#
# Local login local policy
#

allow local_login_t self:capability { dac_override chown fowner fsetid kill setgid setuid net_bind_service sys_nice sys_resource sys_tty_config };
allow local_login_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem dyntransition };
allow local_login_t self:process { setrlimit setexec };
allow local_login_t self:fd use;
allow local_login_t self:fifo_file rw_file_perms;
allow local_login_t self:unix_dgram_socket create_socket_perms;
allow local_login_t self:unix_stream_socket create_stream_socket_perms;
allow local_login_t self:unix_dgram_socket sendto;
allow local_login_t self:unix_stream_socket connectto;
allow local_login_t self:shm create_shm_perms;
allow local_login_t self:sem create_sem_perms;
allow local_login_t self:msgq create_msgq_perms;
allow local_login_t self:msg { send receive };

allow local_login_t local_login_tmp_t:dir create_dir_perms;
allow local_login_t local_login_tmp_t:file create_file_perms;
files_create_tmp_files(local_login_t, local_login_tmp_t, { file dir })

kernel_read_system_state(local_login_t)
kernel_read_kernel_sysctl(local_login_t)

# for SSP/ProPolice
dev_read_urand(local_login_t)

selinux_get_fs_mount(local_login_t)
selinux_validate_context(local_login_t)
selinux_compute_access_vector(local_login_t)
selinux_compute_create_context(local_login_t)
selinux_compute_relabel_context(local_login_t)
selinux_compute_user_contexts(local_login_t)

storage_dontaudit_getattr_fixed_disk(local_login_t)
storage_dontaudit_setattr_fixed_disk(local_login_t)

term_use_all_user_ttys(local_login_t)
term_use_unallocated_tty(local_login_t)
term_relabel_unallocated_ttys(local_login_t)
term_relabel_all_user_ttys(local_login_t)
term_setattr_all_user_ttys(local_login_t)
term_setattr_unallocated_ttys(local_login_t)

auth_domtrans_chk_passwd(local_login_t)
auth_dontaudit_read_shadow(local_login_t)
auth_rw_login_records(local_login_t)
auth_rw_lastlog(local_login_t)
auth_rw_faillog(local_login_t)
auth_exec_pam(local_login_t)
auth_manage_pam_console_data(local_login_t)

domain_read_all_entry_files(local_login_t)

files_read_generic_etc_files(local_login_t)
files_read_etc_runtime_files(local_login_t)
files_read_usr_files(local_login_t)
files_manage_generic_lock_files(var_lock_t)

init_rw_script_pid(local_login_t)
init_dontaudit_use_fd(local_login_t)

libs_use_ld_so(local_login_t)
libs_use_shared_libs(local_login_t)

logging_send_syslog_msg(local_login_t)

miscfiles_read_localization(local_login_t)

seutil_read_config(local_login_t)
seutil_read_default_contexts(local_login_t)

userdom_spec_domtrans_all_users(local_login_t)
userdom_signal_all_users(local_login_t)
userdom_search_all_users_home(local_login_t)
userdom_use_unpriv_users_fd(local_login_t)

# Search for mail spool file.
mta_getattr_spool(local_login_t)

tunable_policy(`use_nfs_home_dirs',`
	fs_read_nfs_files(local_login_t)
	fs_read_nfs_symlinks(local_login_t)
')

tunable_policy(`use_samba_home_dirs',`
	fs_read_cifs_files(local_login_t)
	fs_read_cifs_symlinks(local_login_t)
')

# Red Hat systems seem to have a stray
# fd open from the initrd
optional_policy(`distro_redhat',`
	kernel_dontaudit_use_fd(local_login_t)
	files_dontaudit_read_root_file(local_login_t)
')

ifdef(`TODO',`

can_ypbind(local_login_t)
ifdef(`automount.te', `
	allow local_login_t autofs_t:dir { search getattr };
')

allow local_login_t bin_t:dir r_dir_perms;
allow local_login_t bin_t:notdevfile_class_set r_file_perms;
allow local_login_t sbin_t:dir r_dir_perms;
allow local_login_t sbin_t:notdevfile_class_set r_file_perms;

tunable_policy(`read_default_t',`
	allow local_login_t default_t:dir r_dir_perms;
	allow local_login_t default_t:notdevfile_class_set r_file_perms;
')

# Read directories and files with the readable_t type.
# This type is a general type for "world"-readable files.
allow local_login_t readable_t:dir r_dir_perms;
allow local_login_t readable_t:notdevfile_class_set r_file_perms;

# for when /var/mail is a sym-link
allow local_login_t var_t:lnk_file read;

dontaudit local_login_t sysfs_t:dir search;

allow local_login_t autofs_t:dir r_dir_perms;
allow local_login_t mnt_t:dir r_dir_perms;

# FIXME: what is this for?
optional_policy(`xdm.te', `
	allow xdm_t local_login_t:process signull;
')

ifdef(`crack.te', `
	allow local_login_t crack_db_t:file r_file_perms;
')

ifdef(`targeted_policy',`
	unconfined_domain(local_login_t)
	domain_auto_trans(local_login_t, shell_exec_t, unconfined_t)
')

allow local_login_t mouse_device_t:chr_file { getattr setattr };
allow local_login_t sound_device_t:chr_file { getattr setattr };
allow local_login_t power_device_t:chr_file { getattr setattr };

# Do not audit denied attempts to access devices.
dontaudit local_login_t removable_device_t:blk_file { getattr setattr };
dontaudit local_login_t device_t:{ chr_file blk_file lnk_file } { getattr setattr };
dontaudit local_login_t misc_device_t:{ chr_file blk_file } { getattr setattr };
dontaudit local_login_t framebuf_device_t:chr_file { getattr setattr read };
dontaudit local_login_t apm_bios_t:chr_file { getattr setattr };
dontaudit local_login_t v4l_device_t:chr_file { getattr setattr read };
dontaudit local_login_t removable_device_t:chr_file { getattr setattr };
dontaudit local_login_t scanner_device_t:chr_file { getattr setattr };

# Do not audit denied attempts to access /mnt.
dontaudit local_login_t mnt_t:dir r_dir_perms;

optional_policy(`gpm.te',`
	allow local_login_t gpmctl_t:sock_file { getattr setattr };
')

') dnl endif TODO

#################################
# 
# Sulogin local policy
#

allow sulogin_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem dyntransition };
allow sulogin_t self:fd use;
allow sulogin_t self:fifo_file rw_file_perms;
allow sulogin_t self:unix_dgram_socket create_socket_perms;
allow sulogin_t self:unix_stream_socket create_stream_socket_perms;
allow sulogin_t self:unix_dgram_socket sendto;
allow sulogin_t self:unix_stream_socket connectto;
allow sulogin_t self:shm create_shm_perms;
allow sulogin_t self:sem create_sem_perms;
allow sulogin_t self:msgq create_msgq_perms;
allow sulogin_t self:msg { send receive };

kernel_read_system_state(sulogin_t)

init_get_script_process_group(sulogin_t)

files_read_generic_etc_files(sulogin_t)
# because file systems are not mounted:
files_dontaudit_search_isid_type_dir(sulogin_t)

libs_use_ld_so(sulogin_t)
libs_use_shared_libs(sulogin_t)

logging_send_syslog_msg(sulogin_t)

seutil_read_config(sulogin_t)
seutil_read_default_contexts(sulogin_t)

auth_read_shadow(sulogin_t)

userdom_shell_domtrans_sysadm(sulogin_t)
userdom_use_unpriv_users_fd(sulogin_t)

# suse and debian do not use pam with sulogin...
ifdef(`monolithic_policy',`
	ifdef(`distro_suse', `define(`sulogin_no_pam')')
	ifdef(`distro_debian', `define(`sulogin_no_pam')')
') dnl end monolithic_policy

ifdef(`sulogin_no_pam', `
	allow sulogin_t self:capability sys_tty_config;
	init_get_process_group(sulogin_t)
', `
	allow sulogin_t self:process setexec;
	selinux_get_fs_mount(sulogin_t)
	selinux_validate_context(sulogin_t)
	selinux_compute_access_vector(sulogin_t)
	selinux_compute_create_context(sulogin_t)
	selinux_compute_relabel_context(sulogin_t)
	selinux_compute_user_contexts(sulogin_t)
')

ifdef(`TODO',`

allow sulogin_t sysadm_devpts_t:chr_file { getattr ioctl read write };

can_ypbind(sulogin_t)
ifdef(`automount.te', `
	allow sulogin_t autofs_t:dir { search getattr };
')

allow sulogin_t { staff_home_dir_t sysadm_home_dir_t }:dir search;
') dnl endif TODO
