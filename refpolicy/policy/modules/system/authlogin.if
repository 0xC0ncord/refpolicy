## <module name="authlogin" layer="system">
## <summary>Common policy for authentication and user login.</summary>

#######################################
#
# Per user domain template for this module
#
# authlogin_per_userdomain_template(userdomain_prefix)
#
define(`authlogin_per_userdomain_template',`
	gen_require(`$0'_depend)

	type $1_chkpwd_t, can_read_shadow_passwords; # , nscd_client_domain;
	domain_type($1_chkpwd_t)
	domain_entry_file($1_chkpwd_t,chkpwd_exec_t)
	role $1_r types $1_chkpwd_t;
	role $1_r types system_chkpwd_t;

	allow $1_chkpwd_t self:capability setuid;
	allow $1_chkpwd_t self:process getattr;

	files_list_etc($1_chkpwd_t)
	allow $1_chkpwd_t shadow_t:file { getattr read };

	# is_selinux_enabled
	kernel_read_system_state($1_chkpwd_t)

	fs_dontaudit_getattr_xattr_fs($1_chkpwd_t)

	domain_use_wide_inherit_fd($1_chkpwd_t)

	libs_use_ld_so($1_chkpwd_t)
	libs_use_shared_libs($1_chkpwd_t)

	files_read_generic_etc_files($1_chkpwd_t)
	# for nscd
	files_dontaudit_search_var($1_chkpwd_t)

	logging_send_syslog_msg($1_chkpwd_t)

	miscfiles_read_localization($1_chkpwd_t)

	seutil_read_config($1_chkpwd_t)

	#can_ypbind($1_chkpwd_t)
	#can_kerberos($1_chkpwd_t)
	#can_ldap($1_chkpwd_t)

	# Transition from the user domain to this domain.
	domain_auto_trans($1_t,chkpwd_exec_t,$1_chkpwd_t)

	allow $1_chkpwd_t $1_t:fd use;
	allow $1_t $1_chkpwd_t:fd use;
	allow $1_chkpwd_t $1_t:fifo_file rw_file_perms;
	allow $1_chkpwd_t $1_t:process sigchld;

	# Write to the user domain tty.
	#userdomain_use_$1_terminal($1_chkpwd_t)
	#userdomain_use_$1_pty($1_chkpwd_t)

	# Inherit and use descriptors from gnome-pty-helper.
	#ifdef(`gnome-pty-helper.te',`allow $1_chkpwd_t $1_gph_t:fd use;')

	tunable_policy(`use_dns',`
		allow $1_chkpwd_t self:udp_socket create_socket_perms;
		corenet_udp_sendrecv_all_if($1_chkpwd_t)
		corenet_raw_sendrecv_all_if($1_chkpwd_t)
		corenet_udp_sendrecv_all_nodes($1_chkpwd_t)
		corenet_raw_sendrecv_all_nodes($1_chkpwd_t)
		corenet_udp_bind_all_nodes($1_chkpwd_t)
		corenet_udp_sendrecv_dns_port($1_chkpwd_t)
		sysnet_read_config($1_chkpwd_t)
	')

	optional_policy(`selinux.te',`
		seutil_use_newrole_fd($1_chkpwd_t)
	')

') dnl end authlogin_per_userdomain_template

define(`authlogin_per_userdomain_template_depend',`
	attribute can_read_shadow_passwords;

	type chkpwd_exec_t, system_chkpwd_t, shadow_t;

	class file rx_file_perms;
	class process { getattr transition sigchld };
	class capability setuid;
	class unix_stream_socket { create read getattr write setattr append bind connect getopt setopt shutdown }; 
	class unix_dgram_socket { create read getattr write setattr append bind connect getopt setopt shutdown };
	class fd use;
	class fifo_file rw_file_perms;
')

########################################
## <interface name="auth_login_entry_type">
##	<description>
##		Use the login program as an entry point program.
##	</description>
##	<parameter name="domain">
##		The type of process using the login program as entry point.
##	</parameter>
## </interface>
#
define(`auth_login_entry_type',`
	gen_require(`
		type login_exec_t;
	')

	domain_entry_file($1,login_exec_t)
')

########################################
## <interface name="auth_domtrans_login_program">
##	<description>
##		Execute a login_program in the target domain.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
##	<parameter name="target_domain">
##		The type of the login_program process.
##	</parameter>
## </interface>
#
define(`auth_domtrans_login_program',`
	gen_require(`
		type login_exec_t;
		class process sigchld;
		class fd use;
		class fifo_file rw_file_perms;
	')

	corecmd_search_bin($1)
	domain_auto_trans($1,login_exec_t,$2)

	allow $1 $2:fd use;
	allow $2 $1:fd use;
	allow $2 $1:fifo_file rw_file_perms;
	allow $2 $1:process sigchld;
')

########################################
## <interface name="auth_domtrans_chk_passwd">
##	<description>
##		Run unix_chkpwd to check a password.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_domtrans_chk_passwd',`
	gen_require(`
		type system_chkpwd_t, chkpwd_exec_t, shadow_t;
		class process sigchld;
		class udp_socket create_socket_perms;
		class fd use;
		class fifo_file rw_file_perms;
	')

	corecmd_search_sbin($1)
	domain_auto_trans($1,chkpwd_exec_t,system_chkpwd_t)

	allow $1 system_chkpwd_t:fd use;
	allow system_chkpwd_t $1:fd use;
	allow system_chkpwd_t $1:fifo_file rw_file_perms;
	allow system_chkpwd_t $1:process sigchld;

	dontaudit $1 shadow_t:file { getattr read };
	#can_ypbind($1_t)
	#can_kerberos($1_t)
	#can_ldap($1_t)

	tunable_policy(`use_dns',`
		allow $1 self:udp_socket create_socket_perms;
		corenet_udp_sendrecv_all_if($1)
		corenet_raw_sendrecv_all_if($1)
		corenet_udp_sendrecv_all_nodes($1)
		corenet_raw_sendrecv_all_nodes($1)
		corenet_udp_bind_all_nodes($1)
		corenet_udp_sendrecv_dns_port($1)
		sysnet_read_config($1)
	')
')

########################################
## <interface name="auth_dontaudit_getattr_shadow">
##	<description>
##		
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_dontaudit_getattr_shadow',`
	gen_require(`
		type shadow_t;
		class file stat_file_perms;
	')

	dontaudit $1 shadow_t:file getattr;
')

########################################
## <interface name="auth_read_shadow">
##	<description>
##		Read the shadow passwords file (/etc/shadow)
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_read_shadow',`
	gen_require(`
		attribute can_read_shadow_passwords;
		type shadow_t;
		class file r_file_perms;
	')

	files_list_etc($1)
	allow $1 shadow_t:file r_file_perms;
	typeattribute $1 can_read_shadow_passwords;
')

########################################
## <interface name="auth_dontaudit_read_shadow">
##	<description>
##		Do not audit attempts to read the shadow
##		password file (/etc/shadow).
##	</description>
##	<parameter name="domain">
##		The type of the domain to not audit.
##	</parameter>
## </interface>
#
define(`auth_dontaudit_read_shadow',`
	gen_require(`
		type shadow_t;
		class file r_file_perms;
	')

	dontaudit $1 shadow_t:file { getattr read };
')

########################################
## <interface name="auth_rw_shadow">
##	<description>
##		Read and write the shadow password file (/etc/shadow).
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_rw_shadow',`
	gen_require(`
		attribute can_read_shadow_passwords, can_write_shadow_passwords;
		type shadow_t;
		class file rw_file_perms;
	')

	files_list_etc($1)
	allow $1 shadow_t:file rw_file_perms;
	typeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;
')

#######################################
#
# auth_manage_shadow(domain)
#
define(`auth_manage_shadow',`
	gen_require(`
		attribute can_read_shadow_passwords, can_write_shadow_passwords;
		type shadow_t;
		class file create_file_perms;
	')

	allow $1 shadow_t:file create_file_perms;
	files_create_etc_config($1,shadow_t,file)

	typeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;
')

#######################################
#
# auth_relabelto_shadow(domain)
#
define(`auth_relabelto_shadow',`
	gen_require(`
		attribute can_relabelto_shadow_passwords;
		type shadow_t;
		class file relabelto;
	')

	files_search_etc($1)
	allow $1 shadow_t:file relabelto;
	typeattribute $1 can_relabelto_shadow_passwords;
')

#######################################
#
# auth_rw_faillog(domain)
#
define(`auth_rw_faillog',`
	gen_require(`
		type faillog_t;
		class file rw_file_perms;
	')

	logging_search_logs($1)
	allow $1 faillog_t:file rw_file_perms;
')

#######################################
#
# auth_rw_lastlog(domain)
#
define(`auth_rw_lastlog',`
	gen_require(`
		type lastlog_t;
		class file { getattr read write setattr };
	')

	logging_search_logs($1)
	allow $1 lastlog_t:file { getattr read write setattr };
')

########################################
## <interface name="auth_domtrans_pam">
##	<description>
##		Execute pam programs in the pam domain.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_domtrans_pam',`
	gen_require(`
		type pam_t, pam_exec_t;
		class process sigchld;
		class fd
		class fifo_file rw_file_perms;
	')

	domain_auto_trans($1,pam_exec_t,pam_t)

	allow $1 pam_t:fd use;
	allow pam_t $1:fd use;
	allow pam_t $1:fifo_file rw_file_perms;
	allow pam_t $1:process sigchld;
')

########################################
## <interface name="auth_run_pam">
##	<description>
##		Execute pam programs in the PAM domain.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
##	<parameter name="role">
##		The role to allow the PAM domain.
##	</parameter>
##	<parameter name="terminal">
##		The type of the terminal allow the PAM domain to use.
##	</parameter>
## </interface>
#
define(`auth_run_pam',`
	gen_require(`
		type pam_t;
		class chr_file rw_file_perms;
	')

	auth_domtrans_pam($1)
	role $2 types pam_t;
	allow pam_t $3:chr_file rw_file_perms;
')

########################################
## <interface name="auth_exec_pam">
##	<description>
##		Execute the pam program.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_exec_pam',`
	gen_require(`
		type pam_exec_t;
	')

	can_exec($1,pam_exec_t)
')

#######################################
#
# auth_read_pam_pid(domain)
#
define(`auth_read_pam_pid',`
	gen_require(`
		type pam_var_run_t;
		class dir r_dir_perms;
		class file r_file_perms;
	')

	files_search_var($1)
	files_search_pids($1)
	allow $1 pam_var_run_t:dir r_dir_perms;
	allow $1 pam_var_run_t:file r_file_perms;
')

########################################
## <interface name="auth_delete_pam_pid">
##	<description>
##		Delete pam PID files.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_delete_pam_pid',`
	gen_require(`
		type pam_var_run_t;
		class dir { getattr search read write remove_name };
		class file { getattr unlink };
	')

	files_search_var($1)
	files_search_pids($1)
	allow $1 pam_var_run_t:dir { getattr search read write remove_name };
	allow $1 pam_var_run_t:file { getattr unlink };
')

#######################################
#
# auth_domtrans_pam_console(domain)
#
define(`auth_domtrans_pam_console',`
	gen_require(`
		type pam_console_t, pam_console_exec_t;
		class process sigchld;
		class fd use;
		class fifo_file rw_file_perms;
	')

	domain_auto_trans($1,pam_console_exec_t,pam_console_t)

	allow $1 pam_console_t:fd use;
	allow pam_console_t $1:fd use;
	allow pam_console_t $1:fifo_file rw_file_perms;
	allow pam_console_t $1:process sigchld;
')

#######################################
#
# auth_list_pam_console_data(domain)
#
define(`auth_list_pam_console_data',`
	gen_require(`
		type pam_var_console_t;
		class dir r_dir_perms;
	')

	files_search_var($1)
	files_search_pids($1)
	allow $1 pam_var_console_t:dir r_dir_perms;
')

#######################################
#
# auth_read_pam_console_data(domain)
#
define(`auth_read_pam_console_data',`
	gen_require(`
		type pam_var_console_t;
		class dir r_dir_perms;
		class file r_file_perms;
	')

	files_search_var($1)
	files_search_pids($1)
	allow $1 pam_var_console_t:dir r_dir_perms;
	allow $1 pam_var_console_t:file r_file_perms;
')

#######################################
#
# auth_manage_pam_console_data(domain)
#
define(`auth_manage_pam_console_data',`
	gen_require(`
		type pam_var_console_t;
		class dir rw_dir_perms;
		class file create_file_perms;
		class lnk_file create_lnk_perms;
	')

	files_search_var($1)
	files_search_pids($1)
	allow $1 pam_var_console_t:dir rw_dir_perms;
	allow $1 pam_var_console_t:file create_file_perms;
	allow $1 pam_var_console_t:lnk_file create_lnk_perms;
')

########################################
## <interface name="auth_relabel_all_files_except_shadow">
##	<description>
##		Relabel all files on the filesystem, except
##		the shadow passwords and listed exceptions.
##	</description>
##	<parameter name="domain">
##		The type of the domain perfoming this action.
##	</parameter>
##	<parameter name="exception_types" optional="true">
##		The types to be excluded.  Each type or attribute
##		must be negated by the caller.
##	</parameter>
## </interface>
#

define(`auth_relabel_all_files_except_shadow',`
	gen_require(`
		type shadow_t;
	')

	files_relabel_all_files($1,$2 -shadow_t)
')

########################################
## <interface name="auth_manage_all_files_except_shadow">
##	<description>
##		Manage all files on the filesystem, except
##		the shadow passwords and listed exceptions.
##	</description>
##	<parameter name="domain">
##		The type of the domain perfoming this action.
##	</parameter>
##	<parameter name="exception_types" optional="true">
##		The types to be excluded.  Each type or attribute
##		must be negated by the caller.
##	</parameter>
## </interface>
#

define(`auth_manage_all_files_except_shadow',`
	gen_require(`
		type shadow_t;
	')

	files_manage_all_files($1,$2 -shadow_t)
')

########################################
## <interface name="auth_domtrans_utempter">
##	<description>
##		Execute utempter programs in the utempter domain.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
## </interface>
#
define(`auth_domtrans_utempter',`
	gen_require(`
		type utempter_t, utempter_exec_t;
		class process sigchld;
		class fd use;
		class fifo_file rw_file_perms;
	')

	domain_auto_trans($1,utempter_exec_t,utempter_t)

	allow $1 utempter_t:fd use;
	allow utempter_t $1:fd use;
	allow utempter_t $1:fifo_file rw_file_perms;
	allow utempter_t $1:process sigchld;
')

########################################
## <interface name="auth_run_utempter">
##	<description>
##		Execute utempter programs in the utempter domain.
##	</description>
##	<parameter name="domain">
##		The type of the process performing this action.
##	</parameter>
##	<parameter name="role">
##		The role to allow the utempter domain.
##	</parameter>
##	<parameter name="terminal">
##		The type of the terminal allow the utempter domain to use.
##	</parameter>
## </interface>
#
define(`auth_run_utempter',`
	gen_require(`
		type utempter_t;
		class chr_file rw_file_perms;
	')

	auth_domtrans_utempter($1)
	role $2 types utempter_t;
	allow utempter_t $3:chr_file rw_file_perms;
')

#######################################
#
# auth_read_login_records(domain)
#
define(`auth_read_login_records',`
	gen_require(`
		type wtmp_t;
		class file r_file_perms;
	')

	logging_search_logs($1)
	allow $1 wtmp_t:file r_file_perms;
')

#######################################
#
# auth_dontaudit_write_login_records(domain)
#
define(`auth_dontaudit_write_login_records',`
	gen_require(`
		type wtmp_t;
		class file write;
	')

	dontaudit $1 wtmp_t:file write;
')

#######################################
#
# auth_rw_login_records(domain)
#
define(`auth_rw_login_records',`
	gen_require(`
		type wtmp_t;
		class file rw_file_perms;
	')

	allow $1 wtmp_t:file rw_file_perms;
	logging_search_logs($1)
')

## </module>
