
policy_module(userdomain,1.0)

########################################
#
# Declarations
#

# admin users terminals (tty and pty)
attribute admin_terminal;

# users home directory
attribute home_dir_type;

# users home directory contents
attribute home_type;

# The privhome attribute identifies every domain that can create files under
# regular user home directories in the regular context (IE act on behalf of
# a user in writing regular files)
attribute privhome;

# all unprivileged users tmp files
attribute user_tmpfile;

# all user domains
attribute userdomain;

# unprivileged user domains
attribute unpriv_userdomain;

admin_domain_template(sysadm)
user_domain_template(staff)
user_domain_template(user)

########################################
#
# Local policy
#

# user role change rules:
define(`role_change',`
	allow $1_r $2_r;
	type_change $2_t $1_devpts_t:chr_file $2_devpts_t;
	type_change $2_t $1_tty_device_t:chr_file $2_tty_device_t;
	# avoid annoying messages on terminal hangup
	dontaudit $1_t { $2_devpts_t $2_tty_device_t }:chr_file ioctl;
')

# sysadm_r can change to user roles
role_change(sysadm, user)
role_change(sysadm, staff)

# only staff_r can change to sysadm_r
role_change(staff, sysadm)

# this should be tunable_policy, but
# currently type_change and RBAC allow
# do not work in conditionals
ifdef(`user_canbe_sysadm',`
	role_change(user,sysadm)
')

ifdef(`TODO',`
allow privhome home_root_t:dir { getattr search };

# Add/remove user home directories
file_type_auto_trans(sysadm_t, home_root_t, user_home_dir_t, dir)
')

########################################
#
# Sysadm local policy
#

# for su
allow sysadm_t userdomain:fd use;

optional_policy(`bootloader.te',`
	bootloader_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`clock.te',`
	clock_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`hostname.te',`
	hostname_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`iptables.te',`
	iptables_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`libraries.te',`
	libs_run_ldconfig(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`lvm.te',`
	lvm_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`modutils.te',`
	modutils_run_depmod(sysadm_t,sysadm_r,admin_terminal)
	modutils_run_insmod(sysadm_t,sysadm_r,admin_terminal)
	modutils_run_update_mods(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`mount.te',`
	mount_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`netutils.te',`
	netutils_run(sysadm_t,sysadm_r,admin_terminal)
	netutils_run_ping(sysadm_t,sysadm_r,admin_terminal)
	netutils_run_traceroute(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`rpm.te',`
	rpm_run(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`selinux.te',`
	seutil_run_checkpol(sysadm_t,sysadm_r,admin_terminal)
	seutil_run_loadpol(sysadm_t,sysadm_r,admin_terminal)
	seutil_run_restorecon(sysadm_t,sysadm_r,admin_terminal)
	seutil_run_setfiles(sysadm_t,sysadm_r,admin_terminal)
	optional_policy(`targeted_policy',`',`
		seutil_run_runinit(sysadm_t,sysadm_r,admin_terminal)
	')
')

optional_policy(`sysnetwork.te',`
	sysnet_run_ifconfig(sysadm_t,sysadm_r,admin_terminal)
')

optional_policy(`usermanage.te',`
	usermanage_run_groupadd(sysadm_t,sysadm_r,admin_terminal)
	usermanage_run_useradd(sysadm_t,sysadm_r,admin_terminal)
')
