policy_module(podman)

########################################
#
# Declarations
#

container_engine_domain_template(podman)
container_system_engine(podman_t)
type podman_exec_t;
container_engine_executable_file(podman_exec_t)
application_domain(podman_t, podman_exec_t)
init_daemon_domain(podman_t, podman_exec_t)
ifdef(`enable_mls',`
	init_ranged_daemon_domain(podman_t, podman_exec_t, s0 - mls_systemhigh)
')
mls_trusted_object(podman_t)

container_engine_domain_template(podman_user)
application_domain(podman_user_t, podman_exec_t)
mls_trusted_object(podman_user_t)

########################################
#
# Podman local policy
#

logging_send_syslog_msg(podman_t)

userdom_list_user_home_content(podman_t)
# allow podman to relabel content mounted inside containers
# when run in rootless mode
userdom_relabel_generic_user_home_dirs(podman_t)
userdom_relabel_generic_user_home_files(podman_t)

# when run by root, podman will fail to start if
# /root/.config/containers is not readable
container_config_home_filetrans(podman_t, dir)
container_manage_home_config(podman_t)

ifdef(`init_systemd',`
	init_dbus_chat(podman_t)
	init_setsched(podman_t)
	init_get_generic_units_status(podman_t)
	init_start_generic_units(podman_t)
	init_start_system(podman_t)
	init_stop_system(podman_t)

	# podman can read logs from containers which are
	# sent to the system journal
	logging_search_logs(podman_t)
	systemd_list_journal_dirs(podman_t)
	systemd_read_journal_files(podman_t)
')

########################################
#
# Rootless Podman local policy
#

# required by slirp4netns
files_mounton_etc_dirs(podman_user_t)
# required by slirp4netns
files_mounton_runtime_dirs(podman_user_t)

# FUSE access is required for rootless containers
fs_getattr_fusefs(podman_user_t)
fs_mount_fusefs(podman_user_t)
fs_unmount_fusefs(podman_user_t)
fs_remount_fusefs(podman_user_t)
fs_manage_fusefs_dirs(podman_user_t)
fs_manage_fusefs_files(podman_user_t)
fs_manage_fusefs_symlinks(podman_user_t)
fs_exec_fusefs_files(podman_user_t)
fs_mounton_fusefs(podman_user_t)

kernel_read_fs_sysctls(podman_user_t)
# to read kernel.unprivileged_userns_clone, if present
kernel_read_sysctl(podman_user_t)

logging_send_syslog_msg(podman_user_t)

init_write_runtime_socket(podman_user_t)

mount_exec(podman_user_t)

storage_rw_fuse(podman_user_t)

# allow podman to relabel content mounted inside containers
# when run in rootless mode
userdom_relabel_generic_user_home_dirs(podman_user_t)
userdom_relabel_generic_user_home_files(podman_user_t)

ifdef(`init_systemd',`
	# podman queries the cgroup manager (systemd) over the session bus socket
	dbus_getattr_session_runtime_socket(podman_user_t)
	dbus_write_session_runtime_socket(podman_user_t)

	# rootless podman must be able to get login state of the user
	systemd_dbus_chat_logind(podman_user_t)

	# containers are created as transient user units
	systemd_start_user_runtime_units(podman_user_t)
	systemd_stop_user_runtime_units(podman_user_t)
	systemd_status_user_runtime_units(podman_user_t)

	# podman can read logs from containers which are
	# sent to the user journal
	logging_search_logs(podman_user_t)
	systemd_list_journal_dirs(podman_user_t)
	systemd_read_journal_files(podman_user_t)
')
